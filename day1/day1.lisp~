(defun hash-fold (data found)
	     (let ((try-find (hash-iterate (car data) (cdr data) '() found)))
	       (if (numberp try-find)
		   try-find
		   (hash-fold (cons (car try-find) data) (append  (cdr try-find) found)))))


(defun hash-iterate (cur data finder found)
  (cond
    ((null data)
     (cons cur (reverse finder)))
    ((member (+ cur (car data)) found)
     (car (member (+ cur (car data)) found)))
    (t
     (hash-iterate (+ cur (car data)) (cdr data) (cons (+ cur (car data)) finder)))))
